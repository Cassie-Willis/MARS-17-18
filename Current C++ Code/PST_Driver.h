//
// automatically generated by spin2cpp v3.6.4 on Thu Mar  8 17:13:03 2018
// /home/volsungasaga/Downloads/spin2cpp/build/spin2cpp --gas --side MainFinal (PST_Control).spin 
//

#ifndef PST_Driver_Class_Defined__
#define PST_Driver_Class_Defined__

#include <stdint.h>

class PST_Driver {
public:
// Parallax Serial Terminal Control Character Constants 
#define PST_DRIVER_HOME (1)
#define PST_DRIVER_CRSRXY (2)
#define PST_DRIVER_CRSRLF (3)
#define PST_DRIVER_CRSRRT (4)
#define PST_DRIVER_CRSRUP (5)
#define PST_DRIVER_CRSRDN (6)
#define PST_DRIVER_BELL (7)
#define PST_DRIVER_BKSP (8)
#define PST_DRIVER_TAB (9)
#define PST_DRIVER_LF (10)
#define PST_DRIVER_CLREOL (11)
#define PST_DRIVER_CLRDN (12)
#define PST_DRIVER_CR (13)
#define PST_DRIVER_CRSRX (14)
#define PST_DRIVER_CRSRY (15)
#define PST_DRIVER_CLS (16)
  int32_t 	start(void);
  void 	StartOnCog(int32_t cognumber);
  void 	stop(void);
  void 	ClearHome(void);
  void 	ClearRight(void);
  void 	NewLine(void);
  void 	NewLines(int32_t number);
  void 	SetCursorHome(void);
  void 	SetCursor(int32_t column, int32_t row);
  void 	str(int32_t stringptr);
  void 	strcr(int32_t stringptr);
  int32_t 	dec(int32_t value);
  int32_t 	decNCR(int32_t value);
  int32_t 	GetDec(void);
  static int32_t 	StrToDec(int32_t stringptr);
  void 	bin(int32_t value, int32_t digits);
  int32_t 	GetBin(void);
  static int32_t 	StrToBin(int32_t stringptr);
  int32_t 	GetFloat(void);
  static int32_t 	StrToFloat(int32_t strptr);
  void 	Char(int32_t bytechr);
  int32_t 	CharIn(void);
  void 	tx(int32_t txbyte);
  int32_t 	rx(void);
  void 	rxflush(void);
  int32_t 	rxcheck(void);
  int32_t 	rxtime(int32_t ms);
  void 	getstr(int32_t stringptr);
  void 	hex(int32_t value, int32_t digits);
  int32_t 	GetHex(void);
  static int32_t 	StrToHex(int32_t stringptr);
  static int32_t 	FFloat(int32_t integer);
  static int32_t 	FDiv(int32_t singleA, int32_t singleB);
private:
  volatile int32_t 	cog;
  volatile int32_t 	rx_head, rx_tail, tx_head, tx_tail, rx_pin, tx_pin, rxtx_mode, bit_ticks, buffer_ptr;
// transmit and receive buffers
  volatile char 	rx_buffer[16];
  volatile char 	tx_buffer[16];
  static int32_t 	Pack(int32_t pointer);
  static int32_t 	Unpack(int32_t pointer, int32_t single);
};

#endif
